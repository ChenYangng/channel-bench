#
# Copyright 2014, NICTA
#
# This software may be distributed and modified according to the terms of
# the BSD 2-Clause license. Note that NO WARRANTY is provided.
# See "LICENSE_BSD2.txt" for details.
#
# @TAG(NICTA_BSD)
#

menu    "Manager task for benchmarking tests"
        config APP_MANAGER 
        bool "system resouce manager"
        default y 
        depends on LIB_SEL4 && LIB_MUSL_C 
        help 
             Partitioning system resources and setting up isolated domains. 
        
        config BENCH_UNTYPE_COUNT
        int "number of untyped grant to benchmarking thread" 
        default 1 
        depends on APP_MANAGER 
        help 
              allocate N number of untypes for each of the benchmarking thread. 



      config BENCH_UNTYPE_SIZEBITS
        int "the sizebit of the untypes allocated to benchmarking thread" 
        default 12
        depends on APP_MANAGER 
        help 
             allocating 1<<N untype for each of the benchmarking thread.  
        
       config MANAGER_MITIGATION 
        bool "setting up system for mitigating timing channels" 
        default n 
        depends on APP_MANAGER 
        help  
               setting up kernel objects, and endpointers for testing mitigation mechanisms. 
        

       config MANAGER_COLOUR_ONLY 
        bool "setting up system with coloured memory" 
        default n 
        depends on APP_MANAGER 
        help  
               setting up the user-level objects with coloured memory. 

  config MANAGER_UNCOLOUR_KERNEL
        bool "having a uncoloured kernel" 
        default n 
        depends on APP_MANAGER 
        help  
               setting up the user-level thread with uncoloured kernel.
      
        
       config MANAGER_IPC
        bool "ipc performance"
        default n 
        depends on APP_MANAGER 
        help 
             ipc benchmarks
       
        config MANAGER_IPC_SAME_COLOUR
        bool "Testing the IPC within a coloured domain" 
        default n 
        depends on MANAGER_IPC && MANAGER_MITIGATION
        help  
             The caller and receiver are built from a same cache colour (half of the L2 cache), 
             also using the same kernel image. 

     
      config MANAGER_CACHE_DIV_UNEVEN
        bool "Giving the testing thread n-1 of the L2 cache colours" 
        default n 
        depends on APP_MANAGER
        help  
               The benchmarking thread is  built from n-1 L2 cache colours.

        
        config MANAGER_PMU_COUNTER 
        bool "using pmu counter to monitor events" 
        default n 
        depends on APP_MANAGER 
        help 
              enable pmu counters 


        config MANAGER_CACHE_FLUSH 
        bool "cost of flushing caches"
        default n 
        depends on APP_MANAGER 
        help 
            see timing channel benchmarks 
        
        
        config MANAGER_FUNC_TESTS 
        bool "functional correctness benchmark" 
        default n 
        depends on APP_MANAGER 
        help  
             testing the multikernel feature, including creation, kernel switch, deletion, multicore, etc. 

        config MANAGER_COVERT_BENCH 
        bool "covert channel benchmarks" 
        default n 
        depends on APP_MANAGER 
        help 
            enable covert channel benchmarks 

        config MANAGER_SPLASH_BENCH
        bool "splash benchmarks" 
        default n 
        depends on APP_MANAGER 
        help 
             running splash-2 benchmarks 

        config MANAGER_DCACHE_ATTACK 
        bool "L1 dcache attack" 
        default n 
        depends on MANAGER_COVERT_BENCH  
        help 
            see timing channel benchmarks


       config MANAGER_HUGE_PAGES
       bool "setting up huge pages for the benchmarking thread"
       default n 
       depends on APP_MANAGER
       help 
           manager sets huge pages for the benchmarking thread, size is defined in the bench_common.h, passing pointer to benchmarking thread for the morecore area. 

endmenu


